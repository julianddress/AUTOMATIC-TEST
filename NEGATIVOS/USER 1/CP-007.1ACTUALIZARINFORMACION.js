// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('CP007.1 - ACTUALIZAR INFORMACION', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('CP007.1 - ACTUALIZAR INFORMACION', async function() {
    // Test name: CP007.1 - ACTUALIZAR INFORMACION
    // Step # | name | target | value
    // 1 | open | /home.php | 
    await driver.get("https://tucan.toolsincloud.net/home.php")
    // 2 | setWindowSize | 697x720 | 
    await driver.manage().window().setRect({ width: 697, height: 720 })
    // 3 | click | name=email | 
    await driver.findElement(By.name("email")).click()
    // 4 | type | name=email | javi@gmail.com
    // EMAIL
    await driver.findElement(By.name("email")).sendKeys("javi@gmail.com")
    // 5 | click | name=password | 
    await driver.findElement(By.name("password")).click()
    // 6 | type | name=password | javier2023
    // PASSWORD
    await driver.findElement(By.name("password")).sendKeys("javier2023")
    // 7 | click | name=login | 
    await driver.findElement(By.name("login")).click()
    // 8 | click | css=.grid-sidebar:nth-child(7) strong | 
    await driver.findElement(By.css(".grid-sidebar:nth-child(7) strong")).click()
    // 9 | click | css=.home-edit-button | 
    await driver.findElement(By.css(".home-edit-button")).click()
    // 10 | click | id=exampleInputEmail1 | 
    await driver.findElement(By.id("exampleInputEmail1")).click()
    // 11 | type | id=exampleInputEmail1 | MARTA MARTA MARTA MARTA MARTA
    // NAME
    await driver.findElement(By.id("exampleInputEmail1")).sendKeys("MARTA MARTA MARTA MARTA MARTA")
    // 12 | click | name=bio | 
    await driver.findElement(By.name("bio")).click()
    // 13 | type | name=bio | HALA MADRID xd
    // BIO
    await driver.findElement(By.name("bio")).sendKeys("HALA MADRID xd")
    // 14 | click | name=website | 
    await driver.findElement(By.name("website")).click()
    // 15 | type | name=website | none
    // WEB-SITE
    await driver.findElement(By.name("website")).sendKeys("none")
    // 16 | click | id=exampleInputPassword1 | 
    await driver.findElement(By.id("exampleInputPassword1")).click()
    // 17 | type | id=exampleInputPassword1 | Arabia saudita
    // ADDRESS
    await driver.findElement(By.id("exampleInputPassword1")).sendKeys("Arabia saudita")
    // 18 | assertElementPresent | css=.image-upload:nth-child(2) .far | 
    // PROFILE IMAGE
    {
      const elements = await driver.findElements(By.css(".image-upload:nth-child(2) .far"))
      assert(elements.length)
    }
    // 19 | assertElementPresent | css=.image-upload:nth-child(1) .far | 
    // FRONT IMAGE
    {
      const elements = await driver.findElements(By.css(".image-upload:nth-child(1) .far"))
      assert(elements.length)
    }
    // 20 | click | name=update | 
    // UPDATE
    await driver.findElement(By.name("update")).click()
  })
})
